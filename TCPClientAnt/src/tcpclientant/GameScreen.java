/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tcpclientant;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.imageio.stream.FileImageInputStream;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextArea;

/**
 *
 * @author yusuf.dur
 */
public class GameScreen extends javax.swing.JFrame {

    /**
     * Creates new form GameClient
     */
    Client client;
    TCPClient mainScreen;
    BufferedImage frameIcon;
    JLabel lbl_greetings;
    JButton btn_roll;
    JLabel lbl_rivalS;
    JLabel lbl_playerS;
    
    JLabel lbl_dicee;

    JTextArea actionMessage;

    public GameScreen() throws IOException {
        initComponents();
        setLocationRelativeTo(null);
        this.lbl_greetings = lbl_welcome;
        this.btn_roll = btn_rollTheDice;
        this.lbl_rivalS = lbl_rivalScore;
        this.lbl_playerS = lbl_playerScore;
        this.actionMessage = lbl_action;
        this.lbl_dicee = lbl_dice;
        // ACTIONS WHEN GAME START
        // create a new label with the image
        this.frameIcon = ImageIO.read(new FileImageInputStream(new File("assets\\board2.png")));
        lbl_board.setIcon(new ImageIcon(frameIcon));

        lbl_welcome.setText("You made it. Thatâ€™s incredible!");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_board = new javax.swing.JLabel();
        btn_rollTheDice = new javax.swing.JButton();
        lbl_rivalScore = new javax.swing.JLabel();
        lbl_playerScore = new javax.swing.JLabel();
        lbl_welcome = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lbl_action = new javax.swing.JTextArea();
        lbl_dice = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btn_rollTheDice.setText("ROLL THE DICE");
        btn_rollTheDice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rollTheDiceActionPerformed(evt);
            }
        });

        lbl_rivalScore.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbl_rivalScore.setForeground(new java.awt.Color(0, 0, 0));

        lbl_playerScore.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbl_playerScore.setForeground(new java.awt.Color(0, 0, 0));

        lbl_welcome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        lbl_action.setEditable(false);
        lbl_action.setBackground(new java.awt.Color(204, 204, 204));
        lbl_action.setColumns(20);
        lbl_action.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbl_action.setForeground(new java.awt.Color(255, 0, 51));
        lbl_action.setLineWrap(true);
        lbl_action.setRows(5);
        lbl_action.setWrapStyleWord(true);
        jScrollPane1.setViewportView(lbl_action);

        lbl_dice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbl_dice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lbl_board, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lbl_rivalScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_playerScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_welcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1))
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btn_rollTheDice, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(115, 115, 115))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(lbl_dice, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_board, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(lbl_welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(lbl_rivalScore, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_playerScore, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btn_rollTheDice, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_dice, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_rollTheDiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rollTheDiceActionPerformed

        lbl_dice.setText("");
        lbl_action.setText("");
        int randomNumber = (int) (Math.random() * 6) + 1;
        client.score += randomNumber;
        int currentScore = client.score;
        
        // inform user with dice 
        lbl_dice.setText("You got fair  " + randomNumber + "");
        // ladders conditions
        if (currentScore == 1) {
            client.score = 38;
            lbl_action.setText("Oh that is a ladder you lucky");
        } else if (currentScore == 4) {
            client.score = 14;
            lbl_action.setText("Oh that is a ladder you lucky");
        } else if (currentScore == 9) {
            client.score = 31;
            lbl_action.setText("Oh that is a ladder you lucky");
        } else if (currentScore == 21) {
            client.score = 42;
            lbl_action.setText("Oh that is a ladder you lucky");
        } else if (currentScore == 28) {
            client.score = 84;
            lbl_action.setText("Oh that is a ladder you lucky");
        } else if (currentScore == 51) {
            client.score = 67;
            lbl_action.setText("Oh that is a ladder you lucky");
        } else if (currentScore == 71) {
            client.score = 91;
            lbl_action.setText("Oh that is a ladder you lucky");
        } else if (currentScore == 80) {
            client.score = 100;
            lbl_action.setText("Oh that is a ladder you lucky");
        } //snakes conditions
        else if (currentScore == 17) {
            client.score = 7;
            lbl_action.setText("Uhh that is a snake ");
        } else if (currentScore == 64) {
            client.score = 60;
            lbl_action.setText("Uhh that is a snake ");
        } else if (currentScore == 54) {
            client.score = 34;
            lbl_action.setText("Uhh that is a snake ");
        } else if (currentScore == 62) {
            client.score = 19;
            lbl_action.setText("Uhh that is a snake ");
        } else if (currentScore == 87) {
            client.score = 24;
            lbl_action.setText("Uhh that is a snake ");
        } else if (currentScore == 95) {
            client.score = 75;
            lbl_action.setText("Uhh that is a snake ");
        } else if (currentScore == 93) {
            client.score = 73;
            lbl_action.setText("Uhh that is a snake ");
        } else if (currentScore == 98) {
            client.score = 79;
            lbl_action.setText("Uhh that is a snake ");
        }
        currentScore = client.score;
        // inform player to his score 
        lbl_playerScore.setText("Your score is " + currentScore + "");
        
        
        try {
            // if player reached the 100 point 
            if (currentScore >= 100) {
                client.SendMessage("_f".getBytes());                // send finish the game message
            }
            // send score to server
            String numberString = String.valueOf(currentScore);
            System.out.println("string value of your score");
            if (numberString.length() == 1) {
                numberString = ("0" + numberString + "");
            }

            
            // send "myTurnIsOver" message to server
            client.SendMessage((("_m_" + numberString + "")).getBytes());
            
            // wait all gamescreen in thread  for preventing 2 click of players
            Thread.sleep(500);
        } catch (IOException ex) {
            Logger.getLogger(GameScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(GameScreen.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btn_rollTheDiceActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        client.isInGame = false;
        mainScreen.show();
        mainScreen.setVisible(true);
        mainScreen.searching.setText("Player waiting...");
        mainScreen.counter.setText("0 sn");
        mainScreen.searching.setVisible(false);
        mainScreen.counter.setVisible(false);
        mainScreen.playButton.setEnabled(true);

        try {
            client.SendMessage("_IQuit".getBytes());
        } catch (IOException ex) {
            Logger.getLogger(GameScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("oyun ekranÄ± kapandÄ± ana ekrana dÃ¶nÃ¼ldÃ¼...");
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GameScreen().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(GameScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_rollTheDice;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea lbl_action;
    private javax.swing.JLabel lbl_board;
    private javax.swing.JLabel lbl_dice;
    private javax.swing.JLabel lbl_playerScore;
    private javax.swing.JLabel lbl_rivalScore;
    private javax.swing.JLabel lbl_welcome;
    // End of variables declaration//GEN-END:variables
}
